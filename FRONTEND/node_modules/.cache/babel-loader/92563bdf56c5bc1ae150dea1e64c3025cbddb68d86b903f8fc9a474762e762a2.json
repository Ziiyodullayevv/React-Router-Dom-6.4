{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\RRD\\\\FRONTEND\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\n\n// loader:\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const action = async ({\n  request,\n  params\n}) => {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId);\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/RRD/FRONTEND/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n  const data = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\n// loader:\nexport const loader = async ({ request, params }) => {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event\" },\n      { status: 500 },\n    );\n  } else {\n    return response;\n  }\n};\n\nexport const action = async ({request, params}) => {\n  const eventId = params.eventId;\n  const response  = await fetch('http://localhost:8080/events/' + eventId);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP,CAAC;AAACP,EAAA,CAPID,eAAe;EAAA,QACNN,kBAAkB;AAAA;AAAAe,EAAA,GAD3BT,eAAe;AASrB,eAAeA,eAAe;;AAE9B;AACA,OAAO,MAAMU,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMxB,IAAI,CACR;MAAEyB,OAAO,EAAE;IAA6C,CAAC,EACzD;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAED,OAAO,MAAMK,MAAM,GAAG,MAAAA,CAAO;EAACT,OAAO;EAAEC;AAAM,CAAC,KAAK;EACjD,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;AAC1E,CAAC;AAAA,IAAAL,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}