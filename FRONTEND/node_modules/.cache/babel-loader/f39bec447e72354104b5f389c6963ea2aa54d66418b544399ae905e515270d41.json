{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\RRD\\\\FRONTEND\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData, useRouteError, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event && \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\n\n// loader:\n\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","useRouteError","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","console","log","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/RRD/FRONTEND/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\nimport {\n  json,\n  useLoaderData,\n  useRouteError,\n  useRouteLoaderData,\n} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n  const data = useRouteLoaderData();\n  console.log(data);\n  return (\n    <>\n      <EventItem event={data.event && \"\"} />\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\n// loader:\n\nexport const loader = async ({ request, params }) => {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event\" },\n      { status: 500 },\n    );\n  } else {\n    return response;\n  }\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EACJC,aAAa,EACbC,aAAa,EACbC,kBAAkB,QACb,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,CAAC;EACjCS,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA,CAACF,SAAS;MAACW,KAAK,EAAEJ,IAAI,CAACI,KAAK,IAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACtC,CAAC;AAEP,CAAC;AAACT,EAAA,CARID,eAAe;EAAA,QACNN,kBAAkB;AAAA;AAAAiB,EAAA,GAD3BX,eAAe;AAUrB,eAAeA,eAAe;;AAE9B;;AAEA,OAAO,MAAMY,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM5B,IAAI,CACR;MAAE6B,OAAO,EAAE;IAA6C,CAAC,EACzD;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}