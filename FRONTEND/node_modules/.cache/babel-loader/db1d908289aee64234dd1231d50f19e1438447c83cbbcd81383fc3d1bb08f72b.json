{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\react-router\\\\FRONTEND\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  //events apidan malumot olib kelish uchun:\n  const data = useLoaderData();\n  const {\n    events\n  } = data;\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events,\n    children: [/*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), loadedEvents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\n\n// EventsPage loader:\nexport const loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","defer","Await","jsxDEV","_jsxDEV","EventsPage","_s","data","events","resolve","children","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/react-router/FRONTEND/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\n\nfunction EventsPage() {\n  //events apidan malumot olib kelish uchun:\n  const data = useLoaderData();\n  const { events } = data;\n\n  return (\n    <Await resolve={events}>\n      <EventsList events={events} />\n      {loadedEvents}\n    </Await>\n  );\n}\n\nexport default EventsPage;\n\n// EventsPage loader:\nexport const loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"Could not fetch events.\" }, { status: 500 });\n  } else {\n    return response;\n  }\n};\n\nexport const loader = () => {\n  return defer({ events: loadEvents() });\n};\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAM;IAAES;EAAO,CAAC,GAAGD,IAAI;EAEvB,oBACEH,OAAA,CAACF,KAAK;IAACO,OAAO,EAAED,MAAO;IAAAE,QAAA,gBACrBN,OAAA,CAACN,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BC,YAAY;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEZ;AAACR,EAAA,CAXQD,UAAU;EAAA,QAEJN,aAAa;AAAA;AAAAiB,EAAA,GAFnBX,UAAU;AAanB,eAAeA,UAAU;;AAEzB;AACA,OAAO,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,OAAOpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAOtB,KAAK,CAAC;IAAEO,MAAM,EAAES,UAAU,CAAC;EAAE,CAAC,CAAC;AACxC,CAAC;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}