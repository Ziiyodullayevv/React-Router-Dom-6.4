{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\react-router\\\\FRONTEND\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        event: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nconst loadEvent = async id => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nexport const loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\n\n// loader:\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n};\nexport const action = async ({\n  request,\n  params\n}) => {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/react-router/FRONTEND/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Await,\n  defer,\n  json,\n  redirect,\n  useRouteLoaderData,\n} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventDetailPage = () => {\n  const { event, events } = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <Await resolve={event}>\n        {(loadedEvent) => <EventItem event={loadedEvent} />}\n      </Await>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList event={loadedEvents} />}\n      </Await>\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nconst loadEvent = async (id) => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event\" },\n      { status: 500 },\n    );\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nexport const loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"Could not fetch events.\" }, { status: 500 });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\n\n// loader:\nexport const loader = async ({ request, params }) => {\n  const id = params.eventId;\n\n  return defer({ event: loadEvent(id), events: loadEvents() });\n};\n\nexport const action = async ({ request, params }) => {\n  const eventId = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n  });\n\n  if (!response.ok) {\n    throw json({ message: \"Could not delete event\" }, { status: 500 });\n  }\n\n  return redirect(\"/events\");\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}